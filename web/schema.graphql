schema {
  query: QueryRoot
}

type HealthResponse {
  databaseHealthy: Boolean!
}

"""
ISO 8601 combined date and time without timezone.

# Examples

* `2015-07-01T08:59:60.123`,
"""
scalar NaiveDateTime

type Offer {
  count: Int!
  creationDate: NaiveDateTime!
  description: String!
  id: UUID!
  imageUrl: String!
  name: String!
  offerId: Int!
  price: Float
  shortName: String!
  validFrom: NaiveDateTime!
  validTo: NaiveDateTime!
}

type QueryRoot {
  health: HealthResponse!
  offers: [Offer!]!
}

"""
A UUID is a unique 128-bit number, stored as 16 octets. UUIDs are parsed as
Strings within GraphQL. UUIDs are used to assign unique identifiers to
entities without requiring a central allocating authority.

# References

* [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)
* [RFC4122: A Universally Unique IDentifier (UUID) URN Namespace](http://tools.ietf.org/html/rfc4122)
"""
scalar UUID
