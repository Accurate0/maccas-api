name: Deploy
on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        apps: [api, batch, dashboard, event, web]

    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/cache@v4
        with:
          path: app-target
          key: ${{ runner.os }}-app-target-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.apps }}

      - name: inject /app/target into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-source: app-target
          cache-target: /app/${{ matrix.apps }}-build/target/

      - uses: actions/cache@v3
        with:
          path: cargo-registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.apps }}

      - name: inject /usr/local/cargo/registry/ into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-source: cargo-registry
          cache-target: /usr/local/cargo/registry/

      - name: Fly Registry Auth
        uses: docker/login-action@v3
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: Docker build
        if: ${{ matrix.apps  == 'api' || matrix.apps  == 'batch' || matrix.apps  == 'event' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: registry.fly.io/maccas-${{ matrix.apps }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            BINARY_NAME=${{ matrix.apps }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Docker build
        if: ${{ matrix.apps  == 'dashboard' || matrix.apps  == 'web' }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.apps }}
          push: true
          tags: registry.fly.io/maccas-${{ matrix.apps }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            BINARY_NAME=${{ matrix.apps }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    environment: production
    strategy:
      fail-fast: false
      matrix:
        apps: [api, batch, dashboard, database, event, web]

    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Deploy Production
        if: ${{ matrix.apps  != 'database' }}
        uses: superfly/flyctl-actions@v1
        with:
          args: "deploy ${{ matrix.apps }} --image registry.fly.io/maccas-${{ matrix.apps }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy Production
        if: ${{ matrix.apps  == 'database' }}
        uses: superfly/flyctl-actions@v1
        with:
          args: "deploy ${{ matrix.apps }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
