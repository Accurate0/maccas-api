name: lambda-deploy
on:
  workflow_call:
    inputs:
      directory:
        type: string
        required: true
      lambda_name:
        type: string
        required: true
      zip_path:
        type: string
        required: true
      region:
        type: string
        required: false
        default: ap-southeast-2
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    environment: v2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: stable

      - uses: Swatinem/rust-cache@v1

      - name: rust-cargo-install
        uses: actions-rs/install@v0.1.2
        with:
          crate: cargo-lambda
          version: 0.6.1
          use-tool-cache: true

      - name: install zig
        run: pip3 install ziglang

      - name: cargo build ${{ inputs.lambda_name }}
        run: cargo lambda build --release --target x86_64-unknown-linux-musl --output-format zip
        working-directory: ${{ inputs.directory }}

      - name: publish lambda ${{ inputs.lambda_name }}
        run: aws lambda update-function-code --function-name ${{ inputs.lambda_name }} --zip-file fileb://target/lambda/${{ inputs.zip_path }}/bootstrap.zip --region ${{ inputs.region }}
        working-directory: ${{ inputs.directory }}
