//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "offer_similarity")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub offer_id: i64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub other_offer_id: i64,
    pub similarity: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::offer_details::Entity",
        from = "Column::OfferId",
        to = "super::offer_details::Column::PropositionId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    OfferDetails2,
    #[sea_orm(
        belongs_to = "super::offer_details::Entity",
        from = "Column::OtherOfferId",
        to = "super::offer_details::Column::PropositionId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    OfferDetails1,
}

impl ActiveModelBehavior for ActiveModel {}
