services:
  sensordata:
    restart: unless-stopped
    build:
      context: sensordata
    devices:
      - /dev/kvm
    ports:
      - "8080:8080"
    healthcheck:
      test: curl --fail-with-body http://localhost:8080 || exit 1
      interval: 60s
      retries: 5
      start_period: 90s
      timeout: 3s

  web:
    build:
      context: web
    ports:
      - "3000:3000"
    links:
      - "graphql:graphql"
      - "db:database"
    depends_on:
      - graphql
      - db
    environment:
      - OLD_API_BASE_URL=https://api.maccas.one/v1
      - API_BASE_URL=http://graphql:8000/v1
      - DATABASE_URL=postgres://postgres:test@database/maccas-web
      - AUTH_SECRET=111
      # svelte needs origin for csrf
      - ORIGIN=http://localhost:3000
    env_file:
      - .env.local

  dashboard:
    build:
      context: dashboard
    ports:
      - "3001:3001"
    links:
      - "graphql:graphql"
      - "db:database"
      - "batch:batch"
      - "event:event"
    depends_on:
      - graphql
      - db
      - batch
      - event
    environment:
      - DATABASE_URL=postgres://postgres:test@database/maccas-dashboard
      - API_BASE_URL=http://graphql:8000/v1
      - EVENT_API_BASE=http://event:8001
      - BATCH_API_BASE=http://batch:8002
      - AUTH_SECRET=111

  graphql:
    build:
      dockerfile: Dockerfile
      args:
        - BINARY_NAME=graphql
    ports:
      - "8000:8000"
    links:
      - "db:database"
      # - "event:event"
      # - "batch:batch"
    depends_on:
      - db
      # - event
      # - batch
    environment:
      - DATABASE__URL=postgres://postgres:test@database/maccas
      - EVENT_API_BASE=http://event:8001
      - BATCH_API_BASE=http://batch:8002
    env_file:
      - .env.local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 90s
      timeout: 10s
      retries: 3
      start_period: 1s

  event:
    build:
      dockerfile: Dockerfile
      args:
        - BINARY_NAME=event
    ports:
      - "8001:8001"
    links:
      - "db:database"
    depends_on:
      - db
    environment:
      - DATABASE__URL=postgres://postgres:test@database/maccas
    env_file:
      - .env.local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 90s
      timeout: 10s
      retries: 3
      start_period: 1s

  batch:
    build:
      dockerfile: Dockerfile
      args:
        - BINARY_NAME=batch
    ports:
      - "8002:8002"
    links:
      # - "sensordata:sensordata"
      - "db:database"
    restart: unless-stopped
    depends_on:
      - db
      # db:
      # condition: service_healthy
      # sensordata:
      # condition: service_healthy
    environment:
      - DATABASE__URL=postgres://postgres:test@database/maccas
      - EVENT_API_BASE=http://event:8001
      - SENSORDATA_API_BASE=http://sensordata:8080/v1
      - AUTH_SECRET=111
      - DISABLE_JOBS=create-account,activate-account,categorise-offers
    env_file:
      - .env.local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 90s
      timeout: 10s
      retries: 3
      start_period: 1s

  migration:
    build:
      dockerfile: Dockerfile
      args:
        - BINARY_NAME=migration
    links:
      - "db:database"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:test@database/maccas
    env_file:
      - .env.local

  db:
    image: postgres:16
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_DB: maccas
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 90s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  dragonflydata:
